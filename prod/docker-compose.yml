version: '3'


services:
  web:
    container_name: star_burger
    build:
      context: .
      dockerfile: ./prod/Dockerfile
    command:
      - /bin/sh
      - /code/scripts/entrypoint.sh
    volumes:
      - ..:/code
    env_file:
      - .env
    expose:
      - "8000"
    depends_on:
      - db
      - parcel

  db:
    image: postgres:13.0-alpine
    environment:
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    volumes:
      - data:/var/lib/postgresql/data/
    expose:
      - "5432"
  parcel:
    image: node:16-alpine
    working_dir: /code
    command: /bin/sh -c "npm ci --dev && ./node_modules/.bin/parcel build bundles-src/index.js --dist-dir bundles --public-url='./'"
    volumes:
      - ..:/code

  nginx:
    image: nginx:1.19-alpine
    restart: unless-stopped
    env_file: .env
    volumes:
      - ../staticfiles/:/static/
      - ../media/:/media/
      - ../data/nginx:/etc/nginx/conf.d
      - ../data/certbot/conf:/etc/letsencrypt
      - ../data/certbot/www:/var/www/certbot
    ports:
      - "80:80"
      - "443:443"
    command: "/bin/sh -c 'while :; do sleep 6h & wait $${!}; nginx -s reload; done & nginx -g \"daemon off;\"'"
    depends_on:
      - web

  certbot:
    image: certbot/certbot
    restart: unless-stopped
    volumes:
      - ../data/certbot/conf:/etc/letsencrypt
      - ../data/certbot/www:/var/www/certbot
    entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 12h & wait $${!}; done;'"

volumes:
  data:
